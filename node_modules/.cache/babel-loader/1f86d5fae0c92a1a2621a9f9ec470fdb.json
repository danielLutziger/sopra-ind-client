{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\src\\\\components\\\\views\\\\Game.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { useEffect, useState } from 'react';\nimport { api, handleError } from 'helpers/api';\nimport { Spinner } from 'components/ui/Spinner';\nimport { Button } from 'components/ui/Button';\nimport { useHistory } from 'react-router-dom';\nimport BaseContainer from \"components/ui/BaseContainer\";\nimport PropTypes from \"prop-types\";\nimport \"styles/views/Game.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Player = function Player(_ref) {\n  var user = _ref.user;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"player username\",\n        href: \"/game/dashboard/profile/\".concat(user.id),\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player id\",\n      children: [\"id: \", user.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Player;\nPlayer.propTypes = {\n  user: PropTypes.object\n};\n\nvar Game = function Game() {\n  _s();\n\n  // use react-router-dom's hook to access the history\n  var history = useHistory(); // define a state variable (using the state hook).\n  // if this variable changes, the component will re-render, but the variable will\n  // keep its value throughout render cycles.\n  // a component can have as many state variables as you like.\n  // more information can be found under https://reactjs.org/docs/hooks-state.html\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var logout = function logout() {\n    var token = localStorage.getItem('token');\n    var config = {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    api.post(\"/logout\", {\n      \"id\": localStorage.getItem('id')\n    }, config);\n    localStorage.removeItem('id');\n    localStorage.removeItem('token');\n    history.push('/login');\n  }; // the effect hook can be used to react to change in your component.\n  // in this case, the effect hook is only run once, the first time the component is mounted\n  // this can be achieved by leaving the second argument an empty array.\n  // for more information on the effect hook, please see https://reactjs.org/docs/hooks-effect.html\n\n\n  useEffect(function () {\n    // effect callbacks are synchronous to prevent race conditions. So we put the async function inside:\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var token, config, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                token = localStorage.getItem('token');\n                config = {\n                  headers: {\n                    Authorization: \"Bearer \".concat(token)\n                  }\n                };\n                _context.next = 5;\n                return api.get('/users', config);\n\n              case 5:\n                response = _context.sent;\n                _context.next = 8;\n                return new Promise(function (resolve) {\n                  return setTimeout(resolve, 1000);\n                });\n\n              case 8:\n                // Get the returned users and update the state.\n                setUsers(response.data); // This is just some data for you to see what is available.\n                // Feel free to remove it.\n\n                console.log('request to:', response.request.responseURL);\n                console.log('status code:', response.status);\n                console.log('status text:', response.statusText);\n                console.log('requested data:', response.data); // See here to get more data.\n\n                console.log(response);\n                _context.next = 21;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(\"Something went wrong while fetching the users: \\n\".concat(handleError(_context.t0)));\n                console.error(\"Details:\", _context.t0);\n                alert(\"Something went wrong while fetching the users! See the console for details.\");\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 16]]);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  var content = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 19\n  }, _this);\n\n  if (users) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"game user-list\",\n        children: users.map(function (user) {\n          return /*#__PURE__*/_jsxDEV(Player, {\n            user: user\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        width: \"100%\",\n        onClick: function onClick() {\n          return logout();\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BaseContainer, {\n    className: \"game container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Happy Coding!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"game paragraph\",\n      children: \"Get all users from secure endpoint:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, _this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Game, \"gVhM7zwTqCvaylmeuinf9UkR3Dg=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = Game;\nexport default Game;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Player\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"sources":["C:/Users/danie/WebstormProjects/sopra-fs23-template-client/src/components/views/Game.js"],"names":["useEffect","useState","api","handleError","Spinner","Button","useHistory","BaseContainer","PropTypes","Player","user","id","username","propTypes","object","Game","history","users","setUsers","logout","token","localStorage","getItem","config","headers","Authorization","post","removeItem","push","fetchData","get","response","Promise","resolve","setTimeout","data","console","log","request","responseURL","status","statusText","error","alert","content","map"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\r\nimport {api, handleError} from 'helpers/api';\r\nimport {Spinner} from 'components/ui/Spinner';\r\nimport {Button} from 'components/ui/Button';\r\nimport {useHistory} from 'react-router-dom';\r\nimport BaseContainer from \"components/ui/BaseContainer\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"styles/views/Game.scss\";\r\n\r\nconst Player = ({user}) => (\r\n    <div className=\"player container\">\r\n        <div><a className=\"player username\" href={`/game/dashboard/profile/${user.id}`}>{user.username}</a></div>\r\n        <div className=\"player id\">id: {user.id}</div>\r\n    </div>\r\n);\r\n\r\nPlayer.propTypes = {\r\n    user: PropTypes.object\r\n};\r\n\r\nconst Game = () => {\r\n    // use react-router-dom's hook to access the history\r\n    const history = useHistory();\r\n\r\n    // define a state variable (using the state hook).\r\n    // if this variable changes, the component will re-render, but the variable will\r\n    // keep its value throughout render cycles.\r\n    // a component can have as many state variables as you like.\r\n    // more information can be found under https://reactjs.org/docs/hooks-state.html\r\n    const [users, setUsers] = useState(null);\r\n\r\n    const logout = () => {\r\n        const token = localStorage.getItem('token');\r\n        const config = {\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        };\r\n        api.post(`/logout`, {\"id\": localStorage.getItem('id')}, config);\r\n        localStorage.removeItem('id');\r\n        localStorage.removeItem('token');\r\n        history.push('/login');\r\n    }\r\n\r\n    // the effect hook can be used to react to change in your component.\r\n    // in this case, the effect hook is only run once, the first time the component is mounted\r\n    // this can be achieved by leaving the second argument an empty array.\r\n    // for more information on the effect hook, please see https://reactjs.org/docs/hooks-effect.html\r\n    useEffect(() => {\r\n        // effect callbacks are synchronous to prevent race conditions. So we put the async function inside:\r\n        async function fetchData() {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const config = {\r\n                    headers: {Authorization: `Bearer ${token}`}\r\n                };\r\n                const response = await api.get('/users', config);\r\n\r\n                // delays continuous execution of an async operation for 1 second.\r\n                // This is just a fake async call, so that the spinner can be displayed\r\n                // feel free to remove it :)\r\n                await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n                // Get the returned users and update the state.\r\n                setUsers(response.data);\r\n\r\n                // This is just some data for you to see what is available.\r\n                // Feel free to remove it.\r\n                console.log('request to:', response.request.responseURL);\r\n                console.log('status code:', response.status);\r\n                console.log('status text:', response.statusText);\r\n                console.log('requested data:', response.data);\r\n\r\n                // See here to get more data.\r\n                console.log(response);\r\n            } catch (error) {\r\n                console.error(`Something went wrong while fetching the users: \\n${handleError(error)}`);\r\n                console.error(\"Details:\", error);\r\n                alert(\"Something went wrong while fetching the users! See the console for details.\");\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    let content = <Spinner/>;\r\n\r\n    if (users) {\r\n        content = (\r\n            <div className=\"game\">\r\n                <ul className=\"game user-list\">\r\n                    {users.map(user => (\r\n                        <Player user={user} key={user.id}/>\r\n                    ))}\r\n                </ul>\r\n                <Button\r\n                    width=\"100%\"\r\n                    onClick={() => logout()}\r\n                >\r\n                    Logout\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <BaseContainer className=\"game container\">\r\n            <h2>Happy Coding!</h2>\r\n            <p className=\"game paragraph\">\r\n                Get all users from secure endpoint:\r\n            </p>\r\n            {content}\r\n        </BaseContainer>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}