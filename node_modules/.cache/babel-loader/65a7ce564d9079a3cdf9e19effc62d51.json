{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";\nimport _objectSpread from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\src\\\\components\\\\views\\\\Registration.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useState } from 'react';\nimport { api, handleError } from 'helpers/api';\nimport User from 'models/User';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'components/ui/Button';\nimport 'styles/views/Login.scss';\nimport BaseContainer from \"components/ui/BaseContainer\";\nimport { FormField } from \"../../helpers/formField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Registration = function Registration(props) {\n  _s();\n\n  var history = useHistory();\n\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      registrationValues = _useState2[0],\n      setRegistrationValues = _useState2[1];\n\n  var doRegistration = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var requestBody, response, user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              requestBody = JSON.stringify(registrationValues);\n              _context.next = 4;\n              return api.post('/users', requestBody);\n\n            case 4:\n              response = _context.sent;\n              // Get the returned user and update a new object.\n              user = new User(response.data); // Store the token into the local storage.\n\n              localStorage.setItem('token', user.token); // Login successfully worked --> navigate to the route /game in the GameRouter\n\n              history.push(\"/game\");\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              alert(\"Something went wrong during the login: \\n\".concat(handleError(_context.t0)));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function doRegistration() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    console.log(value.trim());\n\n    if (name === \"username\" && value.trim() === \"\") {\n      console.log(\"hi\");\n      return; // Do not update the state if the first name is blank\n    }\n\n    setRegistrationValues(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BaseContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login form\",\n        children: [/*#__PURE__*/_jsxDEV(FormField, {\n          label: \"Username\",\n          type: \"text\",\n          name: \"username\",\n          value: registrationValues.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(FormField, {\n          label: \"Password\",\n          type: \"password\",\n          name: \"password\",\n          value: registrationValues.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login button-container\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"login stacked-button-container-left\",\n            width: \"100%\",\n            onClick: function onClick() {\n              return history.goBack();\n            },\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"login stacked-button-container-right\",\n            disabled: !registrationValues.username || !registrationValues.password,\n            width: \"100%\",\n            onClick: function onClick() {\n              return doRegistration();\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, _this);\n};\n/**\r\n * You can get access to the history object's properties via the withRouter.\r\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\r\n */\n\n\n_s(Registration, \"14/JV9m1dCUtqAQ5EzB1tMZMZGg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["C:/Users/danie/WebstormProjects/sopra-fs23-template-client/src/components/views/Registration.js"],"names":["React","useState","api","handleError","User","useHistory","Button","BaseContainer","FormField","Registration","props","history","username","password","registrationValues","setRegistrationValues","doRegistration","requestBody","JSON","stringify","post","response","user","data","localStorage","setItem","token","push","alert","handleChange","event","target","name","value","console","log","trim","prevState","goBack"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {api, handleError} from 'helpers/api';\r\nimport User from 'models/User';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Button} from 'components/ui/Button';\r\nimport 'styles/views/Login.scss';\r\nimport BaseContainer from \"components/ui/BaseContainer\";\r\nimport {FormField} from \"../../helpers/formField\";\r\n\r\n\r\nconst Registration = props => {\r\n    const history = useHistory();\r\n    const [registrationValues, setRegistrationValues] = useState({ username: \"\", password: \"\" });\r\n\r\n    const doRegistration = async () => {\r\n        try {\r\n            const requestBody = JSON.stringify(registrationValues);\r\n            const response = await api.post('/users', requestBody);\r\n\r\n            // Get the returned user and update a new object.\r\n            const user = new User(response.data);\r\n\r\n            // Store the token into the local storage.\r\n            localStorage.setItem('token', user.token);\r\n\r\n            // Login successfully worked --> navigate to the route /game in the GameRouter\r\n            history.push(`/game`);\r\n        } catch (error) {\r\n            alert(`Something went wrong during the login: \\n${handleError(error)}`);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        console.log(value.trim())\r\n        if (name === \"username\" && value.trim() === \"\") {\r\n            console.log(\"hi\")\r\n            return; // Do not update the state if the first name is blank\r\n        }\r\n        setRegistrationValues((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <BaseContainer>\r\n            <div className=\"login container\">\r\n                <div className=\"login form\">\r\n                    <FormField\r\n                        label=\"Username\"\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={registrationValues.username}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <FormField\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={registrationValues.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className=\"login button-container\">\r\n                        <Button\r\n                            className=\"login stacked-button-container-left\"\r\n                            width=\"100%\"\r\n                            onClick={() => history.goBack()}\r\n                        >\r\n                            Back\r\n                        </Button>\r\n                        <Button\r\n                            className=\"login stacked-button-container-right\"\r\n                            disabled={!registrationValues.username || !registrationValues.password}\r\n                            width=\"100%\"\r\n                            onClick={() => doRegistration()}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </BaseContainer>\r\n    );\r\n};\r\n\r\n/**\r\n * You can get access to the history object's properties via the withRouter.\r\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\r\n */\r\nexport default Registration;\r\n"]},"metadata":{},"sourceType":"module"}