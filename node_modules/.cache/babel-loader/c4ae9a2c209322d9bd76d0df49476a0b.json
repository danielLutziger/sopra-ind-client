{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\src\\\\components\\\\views\\\\Game.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\danie\\\\WebstormProjects\\\\sopra-fs23-template-client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { useEffect, useState } from 'react';\nimport { api, handleError } from 'helpers/api';\nimport { Spinner } from 'components/ui/Spinner';\nimport { Button } from 'components/ui/Button';\nimport { useHistory } from 'react-router-dom';\nimport BaseContainer from \"components/ui/BaseContainer\";\nimport PropTypes from \"prop-types\";\nimport \"styles/views/Game.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Player = function Player(_ref) {\n  var user = _ref.user;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player username\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/game/dashboard/profile/\".concat(user.id),\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 38\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player id\",\n      children: [\"id: \", user.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = Player;\nPlayer.propTypes = {\n  user: PropTypes.object\n};\n\nvar Game = function Game() {\n  _s();\n\n  // use react-router-dom's hook to access the history\n  var history = useHistory(); // define a state variable (using the state hook).\n  // if this variable changes, the component will re-render, but the variable will\n  // keep its value throughout render cycles.\n  // a component can have as many state variables as you like.\n  // more information can be found under https://reactjs.org/docs/hooks-state.html\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var logout = function logout() {\n    localStorage.removeItem('token');\n    history.push('/login');\n  }; // the effect hook can be used to react to change in your component.\n  // in this case, the effect hook is only run once, the first time the component is mounted\n  // this can be achieved by leaving the second argument an empty array.\n  // for more information on the effect hook, please see https://reactjs.org/docs/hooks-effect.html\n\n\n  useEffect(function () {\n    // effect callbacks are synchronous to prevent race conditions. So we put the async function inside:\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return api.get('/users');\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return new Promise(function (resolve) {\n                  return setTimeout(resolve, 1000);\n                });\n\n              case 6:\n                // Get the returned users and update the state.\n                setUsers(response.data); // This is just some data for you to see what is available.\n                // Feel free to remove it.\n\n                console.log('request to:', response.request.responseURL);\n                console.log('status code:', response.status);\n                console.log('status text:', response.statusText);\n                console.log('requested data:', response.data); // See here to get more data.\n\n                console.log(response);\n                _context.next = 19;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(\"Something went wrong while fetching the users: \\n\".concat(handleError(_context.t0)));\n                console.error(\"Details:\", _context.t0);\n                alert(\"Something went wrong while fetching the users! See the console for details.\");\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 14]]);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  var content = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 17\n  }, _this);\n\n  if (users) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"game user-list\",\n        children: users.map(function (user) {\n          return /*#__PURE__*/_jsxDEV(Player, {\n            user: user\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        width: \"100%\",\n        onClick: function onClick() {\n          return logout();\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BaseContainer, {\n    className: \"game container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Happy Coding!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"game paragraph\",\n      children: \"Get all users from secure endpoint:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Game, \"gVhM7zwTqCvaylmeuinf9UkR3Dg=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = Game;\nexport default Game;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Player\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"sources":["C:/Users/danie/WebstormProjects/sopra-fs23-template-client/src/components/views/Game.js"],"names":["useEffect","useState","api","handleError","Spinner","Button","useHistory","BaseContainer","PropTypes","Player","user","id","username","propTypes","object","Game","history","users","setUsers","logout","localStorage","removeItem","push","fetchData","get","response","Promise","resolve","setTimeout","data","console","log","request","responseURL","status","statusText","error","alert","content","map"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\r\nimport {api, handleError} from 'helpers/api';\r\nimport {Spinner} from 'components/ui/Spinner';\r\nimport {Button} from 'components/ui/Button';\r\nimport {useHistory} from 'react-router-dom';\r\nimport BaseContainer from \"components/ui/BaseContainer\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"styles/views/Game.scss\";\r\n\r\nconst Player = ({user}) => (\r\n  <div className=\"player container\">\r\n    <div className=\"player username\"><a href={`/game/dashboard/profile/${user.id}`}>{user.username}</a></div>\r\n    <div className=\"player id\">id: {user.id}</div>\r\n  </div>\r\n);\r\n\r\nPlayer.propTypes = {\r\n  user: PropTypes.object\r\n};\r\n\r\nconst Game = () => {\r\n  // use react-router-dom's hook to access the history\r\n  const history = useHistory();\r\n\r\n  // define a state variable (using the state hook).\r\n  // if this variable changes, the component will re-render, but the variable will\r\n  // keep its value throughout render cycles.\r\n  // a component can have as many state variables as you like.\r\n  // more information can be found under https://reactjs.org/docs/hooks-state.html\r\n  const [users, setUsers] = useState(null);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    history.push('/login');\r\n  }\r\n\r\n  // the effect hook can be used to react to change in your component.\r\n  // in this case, the effect hook is only run once, the first time the component is mounted\r\n  // this can be achieved by leaving the second argument an empty array.\r\n  // for more information on the effect hook, please see https://reactjs.org/docs/hooks-effect.html\r\n  useEffect(() => {\r\n    // effect callbacks are synchronous to prevent race conditions. So we put the async function inside:\r\n    async function fetchData() {\r\n      try {\r\n        const response = await api.get('/users');\r\n\r\n        // delays continuous execution of an async operation for 1 second.\r\n        // This is just a fake async call, so that the spinner can be displayed\r\n        // feel free to remove it :)\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n        // Get the returned users and update the state.\r\n        setUsers(response.data);\r\n\r\n        // This is just some data for you to see what is available.\r\n        // Feel free to remove it.\r\n        console.log('request to:', response.request.responseURL);\r\n        console.log('status code:', response.status);\r\n        console.log('status text:', response.statusText);\r\n        console.log('requested data:', response.data);\r\n\r\n        // See here to get more data.\r\n        console.log(response);\r\n      } catch (error) {\r\n        console.error(`Something went wrong while fetching the users: \\n${handleError(error)}`);\r\n        console.error(\"Details:\", error);\r\n        alert(\"Something went wrong while fetching the users! See the console for details.\");\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  let content = <Spinner/>;\r\n\r\n  if (users) {\r\n    content = (\r\n      <div className=\"game\">\r\n        <ul className=\"game user-list\">\r\n          {users.map(user => (\r\n            <Player user={user} key={user.id}/>\r\n          ))}\r\n        </ul>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={() => logout()}\r\n        >\r\n          Logout\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <BaseContainer className=\"game container\">\r\n      <h2>Happy Coding!</h2>\r\n      <p className=\"game paragraph\">\r\n        Get all users from secure endpoint:\r\n      </p>\r\n      {content}\r\n    </BaseContainer>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}